package $packageName;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

@Component
public class $className#if($superInterfaces) implements #foreach($interface in $superInterfaces)$interface#if( $foreach.hasNext ),#end#end#end {

    @Autowired
    private $clientFactoryClassName clientFactory;

#foreach($endpoint in $endpoints)
#if($endpoint.requestParam)
    #set($requestParamName = $writer.resolveTypeName($endpoint.requestParam, $types))
#end
#set($hasReturnType = $endpoint.hasReturnType())
#if($hasReturnType)
    #set($returnTypeName = $writer.resolveTypeName($endpoint.returnType, $types))
    #set($returnTypeNameStr = ("new org.springframework.core.ParameterizedTypeReference<" + $returnTypeName +">(){}"))
#end
    #parse("/templates/method_impl.vm")

#end
}
